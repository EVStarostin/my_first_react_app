{"version":3,"sources":["components/Counter/Counter.jsx","components/Header/Header.jsx","components/Pacman/Pacman.jsx","components/AviaSales/AviaSales.jsx","App.js","serviceWorker.js","index.js"],"names":["Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","incrementCounter","setState","counter","state","setInterval","react_default","a","createElement","className","React","Component","Header","Counter_Counter_Counter","Pacman","AviaSales","handleClick","_this$state","flights","pricesIsOpen","length","getFlights","then","res","json","data","catch","error","url","concat","fetch","_this$state2","classes","push","join","onClick","map","flight","i","key","depart_date","origin","destination","value","App","Header_Header_Header","Pacman_Pacman_Pacman","AviaSales_AviaSales_AviaSales","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95692ec9.chunk.js","sourcesContent":["import React from 'react';\nimport './Counter.css';\n\nexport default class Counter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {counter: 0};\n    }\n\n    componentDidMount() {\n        setInterval(this.incrementCounter, 1000);\n    }\n    \n    incrementCounter = () => {\n        this.setState({counter: this.state.counter + 1});\n    }\n\n    render() {\n        return (\n            <div className=\"counter\">{this.state.counter} sec.</div>\n        );\n    }\n}\n","import React from 'react';\nimport Counter from '../Counter/Counter';\nimport './Header.css';\n\nexport default class Header extends React.Component {\n    render() {\n        return (\n            <div className=\"header\">\n                You have been staing on this website for\n                <Counter />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Pacman.css';\n\nexport default class Pacman extends React.Component {\n    render() {\n        return (\n            <div className=\"pacman\">\n                <div className=\"pacman__figure\" />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport './AviaSales.css';\n\nexport default class AviaSales extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {flights: [], error: null, pricesIsOpen: false};\n    }\n\n    getFlights() {\n        const token = '76d0c0460e16b3591eb5b390af2c7343';\n        const url = `https://api.travelpayouts.com/v2/prices/latest?currency=rub&period_type=year&page=1&limit=30&show_to_affiliates=true&sorting=price&token=${token}`;\n\n        return fetch(url);\n    }\n\n    handleClick = () => {\n        const { flights, pricesIsOpen } = this.state;\n\n        if (!pricesIsOpen && flights.length === 0) {\n            this.getFlights()\n                .then(res => res.json())\n                .then(res => this.setState({flights: res.data || [], pricesIsOpen: true}))\n                .catch(error => this.setState({error}))\n        } else {\n            this.setState({pricesIsOpen: !pricesIsOpen});\n        }\n    }\n\n    render() {\n        const { flights, pricesIsOpen, error } = this.state;\n        let classes = ['avia-sales__prices'];\n        \n        pricesIsOpen && classes.push('avia-sales__prices--open');\n        classes = classes.join(' ');\n\n        if (error) {\n            return (\n                <div className=\"avia-sales__error\">\n                    При получении данных произошла ошибка\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"avia-sales\">\n                <button className=\"avia-sales__open\" onClick={this.handleClick}>\n                    {pricesIsOpen ? ' Скрыть ' : 'Показать '}\n                    самые дешевые авиабилеты\n                </button>\n                <ul className={classes}>\n                    {flights.map((flight, i) => (\n                        <li key={i} className=\"avia-sales__item\">\n                            <span className=\"avia-sales__depart-date\">{flight.depart_date}</span>\n                            <span> | </span>\n                            <span className=\"avia-sales__origin\">{flight.origin}</span>\n                            <span> - </span>\n                            <span className=\"avia-sales__destination\">{flight.destination}</span>\n                            <span> | </span>\n                            <span className=\"avia-sales__value\">{flight.value} руб.</span>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Pacman from './components/Pacman/Pacman';\nimport AviaSales from './components/AviaSales/AviaSales';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Pacman />\n        <AviaSales />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}